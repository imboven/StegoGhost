#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–±–æ—Ä–∫–∏ StegoGhost –≤ –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–π —Ñ–∞–π–ª
"""

import os
import sys
import shutil
import subprocess
from pathlib import Path

def clean_build():
    """–û—á–∏—Å—Ç–∫–∞ –ø–∞–ø–æ–∫ —Å–±–æ—Ä–∫–∏"""
    print("üßπ –û—á–∏—Å—Ç–∫–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —Å–±–æ—Ä–æ–∫...")
    
    folders_to_clean = ['build', 'dist', '__pycache__']
    for folder in folders_to_clean:
        if os.path.exists(folder):
            try:
                shutil.rmtree(folder)
                print(f"   –£–¥–∞–ª–µ–Ω–∞ –ø–∞–ø–∫–∞: {folder}")
            except Exception as e:
                print(f"   ‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å {folder}: {e}")
    
    # –£–¥–∞–ª–µ–Ω–∏–µ .pyc —Ñ–∞–π–ª–æ–≤
    try:
        for root, dirs, files in os.walk('.'):
            for file in files:
                if file.endswith('.pyc'):
                    try:
                        os.remove(os.path.join(root, file))
                    except Exception:
                        pass  # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ —É–¥–∞–ª–µ–Ω–∏—è .pyc —Ñ–∞–π–ª–æ–≤
        print("   ‚úÖ –í—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –æ—á–∏—â–µ–Ω—ã")
    except Exception as e:
        print(f"   ‚ö†Ô∏è  –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ .pyc —Ñ–∞–π–ª–æ–≤: {e}")
    
    return True

def check_dependencies():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...")
    
    # –°–ª–æ–≤–∞—Ä—å —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –∏–º–µ–Ω–∞–º–∏ –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞
    required_packages = {
        'PyInstaller': 'PyInstaller',
        'Pillow': 'PIL',
        'cryptography': 'cryptography', 
        'PyQt5': 'PyQt5',
        'numpy': 'numpy',
        'psutil': 'psutil'
    }
    
    missing_packages = []
    
    for display_name, import_name in required_packages.items():
        try:
            __import__(import_name)
            print(f"   ‚úÖ {display_name}")
        except ImportError:
            missing_packages.append(display_name)
            print(f"   ‚ùå {display_name}")
    
    if missing_packages:
        print(f"\n‚ùó –ù–µ –Ω–∞–π–¥–µ–Ω—ã –ø–∞–∫–µ—Ç—ã: {', '.join(missing_packages)}")
        print("   –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∏—Ö –∫–æ–º–∞–Ω–¥–æ–π: pip install " + " ".join(missing_packages))
        return False
    
    return True

def build_application():
    """–°–±–æ—Ä–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å PyInstaller"""
    print("üî® –ù–∞—á–∏–Ω–∞–µ–º —Å–±–æ—Ä–∫—É –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...")
    
    # –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è PyInstaller
    cmd = [
        sys.executable, '-m', 'PyInstaller',
        '--clean',
        '--noconfirm',
        'StegoGhost.spec'
    ]
    
    print(f"   –í—ã–ø–æ–ª–Ω—è–µ–º: {' '.join(cmd)}")
    
    try:
        result = subprocess.run(cmd, check=True, capture_output=True, text=True)
        print("   ‚úÖ –°–±–æ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        return True
    except subprocess.CalledProcessError as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏: {e}")
        print(f"   –í—ã–≤–æ–¥: {e.stdout}")
        print(f"   –û—à–∏–±–∫–∏: {e.stderr}")
        return False

def create_release():
    """–°–æ–∑–¥–∞–Ω–∏–µ –ø–∞–ø–∫–∏ —Ä–µ–ª–∏–∑–∞"""
    print("üì¶ –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–ª–∏–∑–∞...")
    
    dist_exe = Path('dist/StegoGhost.exe')
    if not dist_exe.exists():
        print("   ‚ùå –ò—Å–ø–æ–ª–Ω—è–µ–º—ã–π —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return False
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –ø–∞–ø–∫–∏ —Ä–µ–ª–∏–∑–∞
    release_dir = Path('StegoGhost_Release')
    release_dir.mkdir(exist_ok=True)
    
    # –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø–æ–ª–Ω—è–µ–º–æ–≥–æ —Ñ–∞–π–ª–∞
    shutil.copy2(dist_exe, release_dir)
    
    print(f"   ‚úÖ –ò—Å–ø–æ–ª–Ω—è–µ–º—ã–π —Ñ–∞–π–ª —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω")
    
    # –°–æ–∑–¥–∞–Ω–∏–µ README –¥–ª—è —Ä–µ–ª–∏–∑–∞
    readme_content = """# StegoGhost

–°—Ç–µ–≥–∞–Ω–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è —Å–æ–∫—Ä—ã—Ç–∏—è –¥–∞–Ω–Ω—ã—Ö –≤ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è—Ö.

## –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ
1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ StegoGhost.exe
2. –í—ã–±–µ—Ä–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
3. –í–≤–µ–¥–∏—Ç–µ —Å–µ–∫—Ä–µ—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
4. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–∞—Ä–æ–ª—å
5. –ù–∞–∂–º–∏—Ç–µ "–°–∫—Ä—ã—Ç—å –∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å" –∏–ª–∏ "–ò–∑–≤–ª–µ—á—å —Å–æ–æ–±—â–µ–Ω–∏–µ"

## –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏
- –°–∫—Ä—ã—Ç–∏–µ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è—Ö
- –®–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ AES-256 —Å –∑–∞—â–∏—Ç–æ–π –ø–∞—Ä–æ–ª–µ–º
- –ü–æ–¥–¥–µ—Ä–∂–∫–∞ PNG, JPEG, WebP —Ñ–æ—Ä–º–∞—Ç–æ–≤
- –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —Å —Ç–µ–º–Ω–æ–π —Ç–µ–º–æ–π

## –°–∏—Å—Ç–µ–º–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è
- Windows 7/8/10/11
- –ú–∏–Ω–∏–º—É–º 100 –ú–ë —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –º–µ—Å—Ç–∞
"""
    
    with open(release_dir / 'README.txt', 'w', encoding='utf-8') as f:
        f.write(readme_content)
    
    print(f"   ‚úÖ –†–µ–ª–∏–∑ —Å–æ–∑–¥–∞–Ω –≤ –ø–∞–ø–∫–µ: {release_dir}")
    print(f"   üìÅ –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {dist_exe.stat().st_size / (1024*1024):.1f} –ú–ë")
    
    return True

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Å–±–æ—Ä–∫–∏"""
    print("üöÄ StegoGhost Builder v1.0")
    print("=" * 40)
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ –º—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    if not Path('main.py').exists():
        print("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω main.py! –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –∏–∑ –∫–æ—Ä–Ω—è –ø—Ä–æ–µ–∫—Ç–∞.")
        return False
    
    # –ü–æ—à–∞–≥–æ–≤–∞—è —Å–±–æ—Ä–∫–∞
    steps = [
        ("–û—á–∏—Å—Ç–∫–∞", clean_build),
        ("–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π", check_dependencies),
        ("–°–±–æ—Ä–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è", build_application),
        ("–°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–ª–∏–∑–∞", create_release)
    ]
    
    for step_name, step_func in steps:
        print(f"\nüìã –®–∞–≥: {step_name}")
        if not step_func():
            print(f"‚ùå –û—à–∏–±–∫–∞ –Ω–∞ —à–∞–≥–µ: {step_name}")
            return False
    
    print("\nüéâ –°–±–æ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
    print("   –ò—Å–ø–æ–ª–Ω—è–µ–º—ã–π —Ñ–∞–π–ª: StegoGhost_Release/StegoGhost.exe")
    return True

if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1) 